--------------------------------------------------------
User 
--------------------------------------------------------
-- 1. Users
CREATE TABLE Users (
  UserId INT PRIMARY KEY IDENTITY(1,1),
  FullName NVARCHAR(100),
  Email NVARCHAR(100) UNIQUE,
  PasswordHash NVARCHAR(255),
  PhoneNumber NVARCHAR(15),
  DateOfBirth DATE,
  CreatedAt DATETIME DEFAULT GETDATE(),
  IsActive BIT DEFAULT 1
);

-- 2. Roles
CREATE TABLE Roles (
  RoleId INT PRIMARY KEY IDENTITY(1,1),
  RoleName NVARCHAR(50) UNIQUE
);

-- 3. UserRoles
CREATE TABLE UserRoles (
  UserRoleId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  RoleId INT,
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (RoleId) REFERENCES Roles(RoleId)
);

-- 4. Admins
CREATE TABLE Admins (
  AdminId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  AdminType NVARCHAR(50), -- Super Admin, Category Admin
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 5. Buyers
CREATE TABLE Buyers (
  BuyerId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  LoyaltyPoints INT DEFAULT 0,
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 6. UserAddresses
CREATE TABLE UserAddresses (
  AddressId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  AddressLine1 NVARCHAR(255),
  AddressLine2 NVARCHAR(255),
  City NVARCHAR(100),
  State NVARCHAR(100),
  PostalCode NVARCHAR(20),
  Country NVARCHAR(100),
  IsPrimary BIT DEFAULT 0,
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);
--------------------------------------------------------
Product & Category Management
--------------------------------------------------------
-- 7. Categories
CREATE TABLE Categories (
  CategoryId INT PRIMARY KEY IDENTITY(1,1),
  CategoryName NVARCHAR(100) UNIQUE,
  Description NVARCHAR(255),
  IsActive BIT DEFAULT 1
);

-- 8. SubCategories
CREATE TABLE SubCategories (
  SubCategoryId INT PRIMARY KEY IDENTITY(1,1),
  CategoryId INT,
  SubCategoryName NVARCHAR(100),
  Description NVARCHAR(255),
  FOREIGN KEY (CategoryId) REFERENCES Categories(CategoryId)
);

-- 9. Products
CREATE TABLE Products (
  ProductId INT PRIMARY KEY IDENTITY(1,1),
  SubCategoryId INT,
  ProductName NVARCHAR(100),
  Description TEXT,
  Price DECIMAL(10,2),
  Stock INT,
  CreatedAt DATETIME DEFAULT GETDATE(),
  IsActive BIT DEFAULT 1,
  FOREIGN KEY (SubCategoryId) REFERENCES SubCategories(SubCategoryId)
);

-- 10. ProductImages
CREATE TABLE ProductImages (
  ImageId INT PRIMARY KEY IDENTITY(1,1),
  ProductId INT,
  ImageUrl NVARCHAR(255),
  IsPrimary BIT DEFAULT 0,
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 11. ProductVariants
CREATE TABLE ProductVariants (
  VariantId INT PRIMARY KEY IDENTITY(1,1),
  ProductId INT,
  VariantName NVARCHAR(100), -- e.g., Size: M, Color: Red
  AdditionalPrice DECIMAL(10,2),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 12. ProductTags
CREATE TABLE ProductTags (
  ProductTagId INT PRIMARY KEY IDENTITY(1,1),
  ProductId INT,
  TagName NVARCHAR(50),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);
--------------------------------------------------------
Cart & Wishlist Management
--------------------------------------------------------
-- 13. Wishlist
CREATE TABLE Wishlist (
  WishlistId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT NOT NULL,
  CreatedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 14. WishlistItems
CREATE TABLE WishlistItems (
  WishlistItemId INT PRIMARY KEY IDENTITY(1,1),
  WishlistId INT,
  ProductId INT,
  Quantity INT DEFAULT 1,
  FOREIGN KEY (WishlistId) REFERENCES Wishlist(WishlistId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 15. Cart
CREATE TABLE Cart (
  CartId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT NOT NULL,
  CreatedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 16. CartItems
CREATE TABLE CartItems (
  CartItemId INT PRIMARY KEY IDENTITY(1,1),
  CartId INT,
  ProductId INT,
  Quantity INT,
  FOREIGN KEY (CartId) REFERENCES Cart(CartId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);
--------------------------------------------------------
Orders & Order Management
--------------------------------------------------------
-- 17. Orders
CREATE TABLE Orders (
  OrderId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  OrderDate DATETIME DEFAULT GETDATE(),
  StatusId INT,
  TotalAmount DECIMAL(10,2),
  PaymentMethod NVARCHAR(50),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (StatusId) REFERENCES OrderStatus(StatusId)
);

-- 18. OrderItems
CREATE TABLE OrderItems (
  OrderItemId INT PRIMARY KEY IDENTITY(1,1),
  OrderId INT,
  ProductId INT,
  Quantity INT,
  PriceAtPurchase DECIMAL(10,2),
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 19. OrderStatus
CREATE TABLE OrderStatus (
  StatusId INT PRIMARY KEY IDENTITY(1,1),
  StatusName NVARCHAR(50) -- e.g., Pending, Processing, Shipped, Delivered, Cancelled
);

-- 20. ShippingAddress
CREATE TABLE ShippingAddress (
  ShippingAddressId INT PRIMARY KEY IDENTITY(1,1),
  OrderId INT,
  AddressLine1 NVARCHAR(255),
  AddressLine2 NVARCHAR(255),
  City NVARCHAR(100),
  State NVARCHAR(100),
  Country NVARCHAR(100),
  ZipCode NVARCHAR(20),
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId)
);

-- 21. DeliveryTracking
CREATE TABLE DeliveryTracking (
  TrackingId INT PRIMARY KEY IDENTITY(1,1),
  OrderId INT,
  CourierService NVARCHAR(100),
  TrackingNumber NVARCHAR(100),
  EstimatedDeliveryDate DATE,
  DeliveredDate DATE,
  Status NVARCHAR(50),
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId)
);

-- 22. Invoices
CREATE TABLE Invoices (
  InvoiceId INT PRIMARY KEY IDENTITY(1,1),
  OrderId INT,
  InvoiceDate DATETIME DEFAULT GETDATE(),
  InvoicePdfUrl NVARCHAR(255),
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId)
);
--------------------------------------------------------
Payments & Transactions
--------------------------------------------------------
-- 23. Payments
CREATE TABLE Payments (
  PaymentId INT PRIMARY KEY IDENTITY(1,1),
  OrderId INT,
  UserId INT,
  PaymentDate DATETIME DEFAULT GETDATE(),
  Amount DECIMAL(10,2),
  PaymentStatus NVARCHAR(50), -- e.g., Success, Failed, Pending
  PaymentMethodId INT,
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (PaymentMethodId) REFERENCES PaymentMethods(PaymentMethodId)
);

-- 24. PaymentMethods
CREATE TABLE PaymentMethods (
  PaymentMethodId INT PRIMARY KEY IDENTITY(1,1),
  MethodName NVARCHAR(50) -- e.g., Credit Card, Debit Card, UPI, NetBanking
);

-- 25. UPITransactions
CREATE TABLE UPITransactions (
  UPITransactionId INT PRIMARY KEY IDENTITY(1,1),
  PaymentId INT,
  UPIId NVARCHAR(100),
  UTR NVARCHAR(100),
  FOREIGN KEY (PaymentId) REFERENCES Payments(PaymentId)
);

-- 26. Refunds
CREATE TABLE Refunds (
  RefundId INT PRIMARY KEY IDENTITY(1,1),
  PaymentId INT,
  RefundAmount DECIMAL(10,2),
  RefundDate DATETIME DEFAULT GETDATE(),
  Reason NVARCHAR(255),
  FOREIGN KEY (PaymentId) REFERENCES Payments(PaymentId)
);

-- 27. TransactionsLog
CREATE TABLE TransactionsLog (
  TransactionLogId INT PRIMARY KEY IDENTITY(1,1),
  PaymentId INT,
  LogTime DATETIME DEFAULT GETDATE(),
  Status NVARCHAR(50),
  Message NVARCHAR(255),
  FOREIGN KEY (PaymentId) REFERENCES Payments(PaymentId)
);
--------------------------------------------------------
Admin & Role Management 
--------------------------------------------------------
-- 28. Roles
CREATE TABLE Roles (
  RoleId INT PRIMARY KEY IDENTITY(1,1),
  RoleName NVARCHAR(50) -- Examples: SuperAdmin, CategoryAdmin, Buyer, Guest, etc.
);

-- 29. UserRoles
CREATE TABLE UserRoles (
  UserRoleId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  RoleId INT,
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (RoleId) REFERENCES Roles(RoleId)
);

-- 30. Admins
CREATE TABLE Admins (
  AdminId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  CreatedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 31. SuperAdmins
CREATE TABLE SuperAdmins (
  SuperAdminId INT PRIMARY KEY IDENTITY(1,1),
  AdminId INT,
  AssignedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (AdminId) REFERENCES Admins(AdminId)
);

-- 32. CategoryAdmins
CREATE TABLE CategoryAdmins (
  CategoryAdminId INT PRIMARY KEY IDENTITY(1,1),
  AdminId INT,
  CategoryId INT,
  AssignedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (AdminId) REFERENCES Admins(AdminId),
  FOREIGN KEY (CategoryId) REFERENCES Categories(CategoryId)
);

-- 33. RolePermissions
CREATE TABLE RolePermissions (
  RolePermissionId INT PRIMARY KEY IDENTITY(1,1),
  RoleId INT,
  Permission NVARCHAR(100), -- e.g., 'CanEditProduct', 'CanManageOrders'
  FOREIGN KEY (RoleId) REFERENCES Roles(RoleId)
);

--------------------------------------------------------
Search, Interest, and Analytics
--------------------------------------------------------
-- 34. SearchHistory
CREATE TABLE SearchHistory (
  SearchId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  SearchTerm NVARCHAR(255),
  SearchedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 35. ProductViewHistory
CREATE TABLE ProductViewHistory (
  ViewId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  ProductId INT,
  ViewedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 36. UserInterests
CREATE TABLE UserInterests (
  InterestId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  CategoryId INT,
  InterestLevel INT DEFAULT 1, -- Scale from 1 to 10 maybe
  LastUpdated DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (CategoryId) REFERENCES Categories(CategoryId)
);

-- 37. ProductRatings
CREATE TABLE ProductRatings (
  RatingId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  ProductId INT,
  Rating INT CHECK (Rating BETWEEN 1 AND 5),
  Review NVARCHAR(MAX),
  RatedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- 38. Feedback
CREATE TABLE Feedback (
  FeedbackId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  Message NVARCHAR(MAX),
  SubmittedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);
--------------------------------------------------------
 Delivery, Notifications, and Logs
--------------------------------------------------------
-- 39. ContactUsMessages
CREATE TABLE ContactUsMessages (
  MessageId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT NULL, -- Optional, in case user is logged in
  Name NVARCHAR(100),
  Email NVARCHAR(100),
  Subject NVARCHAR(200),
  Message TEXT,
  CreatedAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 40. SystemLogs
CREATE TABLE SystemLogs (
  LogId INT PRIMARY KEY IDENTITY(1,1),
  Action NVARCHAR(255),
  PerformedByUserId INT,
  ModuleName NVARCHAR(100),
  Timestamp DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (PerformedByUserId) REFERENCES Users(UserId)
);

-- 41. EmailTemplates
CREATE TABLE EmailTemplates (
  TemplateId INT PRIMARY KEY IDENTITY(1,1),
  TemplateName NVARCHAR(100) UNIQUE,
  Subject NVARCHAR(200),
  Body TEXT,
  CreatedAt DATETIME DEFAULT GETDATE()
);

-- 42. SMSLogs
CREATE TABLE SMSLogs (
  SMSLogId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT NULL, -- Optional
  PhoneNumber NVARCHAR(20),
  Message TEXT,
  SentAt DATETIME DEFAULT GETDATE(),
  Status NVARCHAR(50), -- Sent, Failed, Queued, etc.
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 43. PushNotificationLogs
CREATE TABLE PushNotificationLogs (
  NotificationId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  Title NVARCHAR(200),
  Message TEXT,
  SentAt DATETIME DEFAULT GETDATE(),
  Status NVARCHAR(50),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 44. EmailLogs
CREATE TABLE EmailLogs (
  EmailLogId INT PRIMARY KEY IDENTITY(1,1),
  UserId INT,
  TemplateId INT,
  Email NVARCHAR(100),
  Subject NVARCHAR(200),
  Status NVARCHAR(50), -- Sent, Failed, etc.
  SentAt DATETIME DEFAULT GETDATE(),
  FOREIGN KEY (UserId) REFERENCES Users(UserId),
  FOREIGN KEY (TemplateId) REFERENCES EmailTemplates(TemplateId)
);


